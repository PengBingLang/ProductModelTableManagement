<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chl.pengBingLang.mapper.UserRoleMapper" >

    <resultMap id="BaseResultMap" type="chl.pengBingLang.po.UserRole" >
        <id column="USER_ID" property="userId" jdbcType="CHAR" />
        <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
        <result column="DOC" property="doc" jdbcType="VARCHAR" />
        <result column="BACKUP01" property="backup01" jdbcType="VARCHAR" />
        <result column="BACKUP02" property="backup02" jdbcType="VARCHAR" />
        <result column="BACKUP03" property="backup03" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        USER_ID, ROLE_ID, DOC, BACKUP01, BACKUP02, BACKUP03
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="chl.pengBingLang.po.UserRoleKey" >
        select 
        <include refid="Base_Column_List" />
        from USER_ROLE
        where USER_ID = #{userId,jdbcType=CHAR}
          and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="chl.pengBingLang.po.UserRoleKey" >
        delete from USER_ROLE
        where USER_ID = #{userId,jdbcType=CHAR}
          and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="chl.pengBingLang.po.UserRole" >
        insert into USER_ROLE (USER_ID, ROLE_ID, DOC, 
            BACKUP01, BACKUP02, BACKUP03
            )
        values (#{userId,jdbcType=CHAR}, #{roleId,jdbcType=VARCHAR}, #{doc,jdbcType=VARCHAR}, 
            #{backup01,jdbcType=VARCHAR}, #{backup02,jdbcType=VARCHAR}, #{backup03,jdbcType=VARCHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="chl.pengBingLang.po.UserRole" >
        insert into USER_ROLE
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                USER_ID,
            </if>
            <if test="roleId != null" >
                ROLE_ID,
            </if>
            <if test="doc != null" >
                DOC,
            </if>
            <if test="backup01 != null" >
                BACKUP01,
            </if>
            <if test="backup02 != null" >
                BACKUP02,
            </if>
            <if test="backup03 != null" >
                BACKUP03,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=CHAR},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="doc != null" >
                #{doc,jdbcType=VARCHAR},
            </if>
            <if test="backup01 != null" >
                #{backup01,jdbcType=VARCHAR},
            </if>
            <if test="backup02 != null" >
                #{backup02,jdbcType=VARCHAR},
            </if>
            <if test="backup03 != null" >
                #{backup03,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="chl.pengBingLang.po.UserRole" >
        update USER_ROLE
        <set >
            <if test="doc != null" >
                DOC = #{doc,jdbcType=VARCHAR},
            </if>
            <if test="backup01 != null" >
                BACKUP01 = #{backup01,jdbcType=VARCHAR},
            </if>
            <if test="backup02 != null" >
                BACKUP02 = #{backup02,jdbcType=VARCHAR},
            </if>
            <if test="backup03 != null" >
                BACKUP03 = #{backup03,jdbcType=VARCHAR},
            </if>
        </set>
        where USER_ID = #{userId,jdbcType=CHAR}
          and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="chl.pengBingLang.po.UserRole" >
        update USER_ROLE
        set DOC = #{doc,jdbcType=VARCHAR},
            BACKUP01 = #{backup01,jdbcType=VARCHAR},
            BACKUP02 = #{backup02,jdbcType=VARCHAR},
            BACKUP03 = #{backup03,jdbcType=VARCHAR}
        where USER_ID = #{userId,jdbcType=CHAR}
          and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </update>
</mapper>